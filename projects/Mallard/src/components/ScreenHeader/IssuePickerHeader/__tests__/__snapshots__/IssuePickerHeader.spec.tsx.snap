// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IssuePickerHeader should match the altered style by the prop headerStyles 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#052962",
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "paddingVertical": 10,
      },
      Object {
        "backgroundColor": "#7D0068",
      },
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "flex-end",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        },
        Array [
          Object {
            "marginTop": 20,
          },
          Object {
            "height": 49,
          },
        ],
        undefined,
      ]
    }
  >
    <View>
      <View
        style={
          Object {
            "paddingLeft": 14,
            "width": 90,
            "zIndex": 2,
          }
        }
      >
        <View
          accessibilityHint="Navigates to the settings screen"
          accessibilityLabel="Settings button"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 999,
                  "height": 42,
                  "justifyContent": "center",
                  "paddingHorizontal": 21,
                },
                Object {
                  "backgroundColor": undefined,
                  "borderColor": "#FFFFFF",
                  "borderWidth": 1,
                },
                Object {
                  "alignItems": "center",
                  "aspectRatio": 1,
                  "justifyContent": "center",
                  "paddingHorizontal": 0,
                  "width": 42,
                },
                undefined,
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "fontFamily": "GuardianIcons-Regular",
                    "fontSize": 20,
                    "lineHeight": 20,
                  },
                  Array [
                    Object {
                      "color": "#FFFFFF",
                    },
                    undefined,
                  ],
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
          Object {
            "width": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "flexDirection": "row",
            },
            Object {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "marginRight": 14,
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View>
                <Text
                  style={
                    Array [
                      Object {
                        "flexShrink": 0,
                        "fontFamily": "GTGuardianTitlepiece-Bold",
                        "fontSize": 24,
                        "lineHeight": 26,
                      },
                      Array [
                        Object {
                          "color": "#FFFFFF",
                          "marginTop": -2,
                        },
                        undefined,
                        Object {
                          "flexShrink": 0,
                          "fontFamily": "GHGuardianHeadline-Regular",
                          "fontSize": 24,
                          "lineHeight": 26,
                        },
                        Object {
                          "color": "#007ABC",
                        },
                      ],
                    ]
                  }
                >
                  UK
                </Text>
                <Text
                  style={
                    Array [
                      Object {
                        "flexShrink": 0,
                        "fontFamily": "GTGuardianTitlepiece-Bold",
                        "fontSize": 24,
                        "lineHeight": 26,
                      },
                      Array [
                        Object {
                          "color": "#FFFFFF",
                          "marginTop": -2,
                        },
                        Object {
                          "color": "#ffe500",
                        },
                        undefined,
                        Object {
                          "color": "#F3C100",
                        },
                      ],
                    ]
                  }
                >
                  Daily
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            Object {
              "paddingRight": 14,
            }
          }
        >
          <View
            accessibilityHint="Returns to the edition"
            accessibilityLabel="Close button"
            accessibilityRole="button"
            accessible={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 999,
                    "height": 42,
                    "justifyContent": "center",
                    "paddingHorizontal": 21,
                  },
                  Object {
                    "backgroundColor": "#ffe500",
                  },
                  Object {
                    "alignItems": "center",
                    "aspectRatio": 1,
                    "justifyContent": "center",
                    "paddingHorizontal": 0,
                    "width": 42,
                  },
                  undefined,
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "fontFamily": "GuardianIcons-Regular",
                      "fontSize": 20,
                      "lineHeight": 20,
                    },
                    Array [
                      Object {
                        "color": "#121212",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`IssuePickerHeader should match the default style 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#052962",
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "paddingVertical": 10,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "flex-end",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        },
        Array [
          Object {
            "marginTop": 20,
          },
          Object {
            "height": 49,
          },
        ],
        undefined,
      ]
    }
  >
    <View>
      <View
        style={
          Object {
            "paddingLeft": 14,
            "width": 90,
            "zIndex": 2,
          }
        }
      >
        <View
          accessibilityHint="Navigates to the settings screen"
          accessibilityLabel="Settings button"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 999,
                  "height": 42,
                  "justifyContent": "center",
                  "paddingHorizontal": 21,
                },
                Object {
                  "backgroundColor": undefined,
                  "borderColor": "#FFFFFF",
                  "borderWidth": 1,
                },
                Object {
                  "alignItems": "center",
                  "aspectRatio": 1,
                  "justifyContent": "center",
                  "paddingHorizontal": 0,
                  "width": 42,
                },
                undefined,
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "fontFamily": "GuardianIcons-Regular",
                    "fontSize": 20,
                    "lineHeight": 20,
                  },
                  Array [
                    Object {
                      "color": "#FFFFFF",
                    },
                    undefined,
                  ],
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
          Object {
            "width": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "flexDirection": "row",
            },
            Object {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "marginRight": 14,
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View>
                <Text
                  style={
                    Array [
                      Object {
                        "flexShrink": 0,
                        "fontFamily": "GTGuardianTitlepiece-Bold",
                        "fontSize": 24,
                        "lineHeight": 26,
                      },
                      Array [
                        Object {
                          "color": "#FFFFFF",
                          "marginTop": -2,
                        },
                        undefined,
                        Object {
                          "flexShrink": 0,
                          "fontFamily": "GHGuardianHeadline-Regular",
                          "fontSize": 24,
                          "lineHeight": 26,
                        },
                        Object {},
                      ],
                    ]
                  }
                >
                  UK
                </Text>
                <Text
                  style={
                    Array [
                      Object {
                        "flexShrink": 0,
                        "fontFamily": "GTGuardianTitlepiece-Bold",
                        "fontSize": 24,
                        "lineHeight": 26,
                      },
                      Array [
                        Object {
                          "color": "#FFFFFF",
                          "marginTop": -2,
                        },
                        Object {
                          "color": "#ffe500",
                        },
                        undefined,
                        Object {},
                      ],
                    ]
                  }
                >
                  Daily
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            Object {
              "paddingRight": 14,
            }
          }
        >
          <View
            accessibilityHint="Returns to the edition"
            accessibilityLabel="Close button"
            accessibilityRole="button"
            accessible={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 999,
                    "height": 42,
                    "justifyContent": "center",
                    "paddingHorizontal": 21,
                  },
                  Object {
                    "backgroundColor": "#ffe500",
                  },
                  Object {
                    "alignItems": "center",
                    "aspectRatio": 1,
                    "justifyContent": "center",
                    "paddingHorizontal": 0,
                    "width": 42,
                  },
                  undefined,
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "fontFamily": "GuardianIcons-Regular",
                      "fontSize": 20,
                      "lineHeight": 20,
                    },
                    Array [
                      Object {
                        "color": "#121212",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`IssuePickerHeader should match the default style with a subTitle 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#052962",
        "flexDirection": "row",
        "justifyContent": "flex-end",
        "paddingVertical": 10,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "flex-end",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        },
        Array [
          Object {
            "marginTop": 20,
          },
          Object {
            "height": 49,
          },
        ],
        undefined,
      ]
    }
  >
    <View>
      <View
        style={
          Object {
            "paddingLeft": 14,
            "width": 90,
            "zIndex": 2,
          }
        }
      >
        <View
          accessibilityHint="Navigates to the settings screen"
          accessibilityLabel="Settings button"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 999,
                  "height": 42,
                  "justifyContent": "center",
                  "paddingHorizontal": 21,
                },
                Object {
                  "backgroundColor": undefined,
                  "borderColor": "#FFFFFF",
                  "borderWidth": 1,
                },
                Object {
                  "alignItems": "center",
                  "aspectRatio": 1,
                  "justifyContent": "center",
                  "paddingHorizontal": 0,
                  "width": 42,
                },
                undefined,
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "fontFamily": "GuardianIcons-Regular",
                    "fontSize": 20,
                    "lineHeight": 20,
                  },
                  Array [
                    Object {
                      "color": "#FFFFFF",
                    },
                    undefined,
                  ],
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "flex-start",
          },
          Object {
            "width": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
              "flexDirection": "row",
            },
            Object {
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <View
          style={
            Object {
              "marginRight": 14,
            }
          }
        >
          <RNGestureHandlerButton
            collapsable={false}
            onGestureEvent={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            onHandlerStateChange={[Function]}
            rippleColor={0}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View>
                <Text
                  style={
                    Array [
                      Object {
                        "flexShrink": 0,
                        "fontFamily": "GTGuardianTitlepiece-Bold",
                        "fontSize": 24,
                        "lineHeight": 26,
                      },
                      Array [
                        Object {
                          "color": "#FFFFFF",
                          "marginTop": -2,
                        },
                        undefined,
                        Object {
                          "flexShrink": 0,
                          "fontFamily": "GHGuardianHeadline-Regular",
                          "fontSize": 24,
                          "lineHeight": 26,
                        },
                        Object {},
                      ],
                    ]
                  }
                >
                  Recent
                </Text>
                <Text
                  style={
                    Array [
                      Object {
                        "flexShrink": 0,
                        "fontFamily": "GTGuardianTitlepiece-Bold",
                        "fontSize": 24,
                        "lineHeight": 26,
                      },
                      Array [
                        Object {
                          "color": "#FFFFFF",
                          "marginTop": -2,
                        },
                        Object {
                          "color": "#ffe500",
                        },
                        undefined,
                        Object {},
                      ],
                    ]
                  }
                >
                  Editions
                </Text>
              </View>
            </View>
          </RNGestureHandlerButton>
        </View>
        <View
          style={
            Object {
              "paddingRight": 14,
            }
          }
        >
          <View
            accessibilityHint="Returns to the edition"
            accessibilityLabel="Close button"
            accessibilityRole="button"
            accessible={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 999,
                    "height": 42,
                    "justifyContent": "center",
                    "paddingHorizontal": 21,
                  },
                  Object {
                    "backgroundColor": "#ffe500",
                  },
                  Object {
                    "alignItems": "center",
                    "aspectRatio": 1,
                    "justifyContent": "center",
                    "paddingHorizontal": 0,
                    "width": 42,
                  },
                  undefined,
                ]
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "fontFamily": "GuardianIcons-Regular",
                      "fontSize": 20,
                      "lineHeight": 20,
                    },
                    Array [
                      Object {
                        "color": "#121212",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
