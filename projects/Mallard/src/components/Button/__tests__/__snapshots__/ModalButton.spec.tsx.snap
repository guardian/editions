// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModalButton should display a ModalButton with accessible text 1`] = `
<View
  accessibilityHint="This button signs you out"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "marginRight": 10,
      "marginTop": 10,
      "opacity": 1,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 999,
          "height": 42,
          "justifyContent": "center",
          "paddingHorizontal": 21,
        },
        {
          "backgroundColor": "#ffffff",
        },
        false,
        undefined,
      ]
    }
  >
    <Text
      style={
        [
          {
            "flexShrink": 0,
            "fontFamily": "GuardianTextSans-Regular",
            "fontSize": 17,
            "lineHeight": 21,
          },
          {
            "color": "#121212",
          },
          [
            {
              "flexShrink": 0,
              "fontFamily": "GuardianTextSans-Bold",
              "fontSize": 17,
              "lineHeight": 21,
            },
            {
              "textAlign": "auto",
            },
            {
              "color": "#052962",
            },
            undefined,
          ],
        ]
      }
    >
      Sign out
    </Text>
  </View>
</View>
`;

exports[`ModalButton should display a ModalButton with an alternative appearance 1`] = `
<View
  accessibilityHint="Sign out"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "marginRight": 10,
      "marginTop": 10,
      "opacity": 1,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 999,
          "height": 42,
          "justifyContent": "center",
          "paddingHorizontal": 21,
        },
        {
          "backgroundColor": "#FF7F0F",
        },
        false,
        undefined,
      ]
    }
  >
    <Text
      style={
        [
          {
            "flexShrink": 0,
            "fontFamily": "GuardianTextSans-Regular",
            "fontSize": 17,
            "lineHeight": 21,
          },
          {
            "color": "#121212",
          },
          [
            {
              "flexShrink": 0,
              "fontFamily": "GuardianTextSans-Bold",
              "fontSize": 17,
              "lineHeight": 21,
            },
            {
              "textAlign": "auto",
            },
            {
              "color": "#ffffff",
            },
            undefined,
          ],
        ]
      }
    >
      Sign out
    </Text>
  </View>
</View>
`;

exports[`ModalButton should display a default ModalButton 1`] = `
<View
  accessibilityHint="Sign out"
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  hitSlop={
    {
      "bottom": 10,
      "left": 10,
      "right": 10,
      "top": 10,
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "marginRight": 10,
      "marginTop": 10,
      "opacity": 1,
    }
  }
>
  <View
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 999,
          "height": 42,
          "justifyContent": "center",
          "paddingHorizontal": 21,
        },
        {
          "backgroundColor": "#ffffff",
        },
        false,
        undefined,
      ]
    }
  >
    <Text
      style={
        [
          {
            "flexShrink": 0,
            "fontFamily": "GuardianTextSans-Regular",
            "fontSize": 17,
            "lineHeight": 21,
          },
          {
            "color": "#121212",
          },
          [
            {
              "flexShrink": 0,
              "fontFamily": "GuardianTextSans-Bold",
              "fontSize": 17,
              "lineHeight": 21,
            },
            {
              "textAlign": "auto",
            },
            {
              "color": "#052962",
            },
            undefined,
          ],
        ]
      }
    >
      Sign out
    </Text>
  </View>
</View>
`;
