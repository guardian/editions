diff --git a/node_modules/react-native-pager-view/android/src/main/java/com/reactnativepagerview/PagerViewViewManager.kt b/node_modules/react-native-pager-view/android/src/main/java/com/reactnativepagerview/PagerViewViewManager.kt
index 81070b2..03b2a6d 100644
--- a/node_modules/react-native-pager-view/android/src/main/java/com/reactnativepagerview/PagerViewViewManager.kt
+++ b/node_modules/react-native-pager-view/android/src/main/java/com/reactnativepagerview/PagerViewViewManager.kt
@@ -2,6 +2,7 @@ package com.reactnativepagerview
 
 import android.view.View
 import android.view.ViewGroup
+import androidx.recyclerview.widget.RecyclerView
 import androidx.viewpager2.widget.ViewPager2
 import androidx.viewpager2.widget.ViewPager2.OnPageChangeCallback
 import com.facebook.infer.annotation.Assertions
@@ -25,6 +26,17 @@ class PagerViewViewManager : ViewGroupManager<NestedScrollableHost>() {
     return REACT_CLASS
   }
 
+  fun ViewPager2.reduceDragSensitivity() {
+    val recyclerViewField = ViewPager2::class.java.getDeclaredField("mRecyclerView")
+    recyclerViewField.isAccessible = true
+    val recyclerView = recyclerViewField.get(this) as RecyclerView
+
+    val touchSlopField = RecyclerView::class.java.getDeclaredField("mTouchSlop")
+    touchSlopField.isAccessible = true
+    val touchSlop = touchSlopField.get(recyclerView) as Int
+    touchSlopField.set(recyclerView, touchSlop*8)
+  }
+
   override fun createViewInstance(reactContext: ThemedReactContext): NestedScrollableHost {
     val host = NestedScrollableHost(reactContext)
     host.layoutParams = ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT)
@@ -142,6 +154,11 @@ class PagerViewViewManager : ViewGroupManager<NestedScrollableHost>() {
     return true
   }
 
+  @ReactProp(name = "scrollSensitivity", defaultInt = 2)
+  fun setScrollSensitivity(viewPager: NestedScrollableHost, value: Int) {
+    getViewPager(viewPager).reduceDragSensitivity()
+  }
+
   @ReactProp(name = "scrollEnabled", defaultBoolean = true)
   fun setScrollEnabled(host: NestedScrollableHost, value: Boolean) {
     getViewPager(host).isUserInputEnabled = value
diff --git a/node_modules/react-native-pager-view/lib/typescript/types.d.ts b/node_modules/react-native-pager-view/lib/typescript/types.d.ts
index e14b01b..c29fd09 100644
--- a/node_modules/react-native-pager-view/lib/typescript/types.d.ts
+++ b/node_modules/react-native-pager-view/lib/typescript/types.d.ts
@@ -4,6 +4,7 @@ export declare type TransitionStyle = 'scroll' | 'curl';
 export declare type Orientation = 'horizontal' | 'vertical';
 export declare type OverScrollMode = 'auto' | 'always' | 'never';
 export declare type PageScrollState = 'idle' | 'dragging' | 'settling';
+export declare type ScrollSensitivity = 2|3|4|5|6|7|8;
 export declare type PagerViewOnPageScrollEvent = ReactNative.NativeSyntheticEvent<PagerViewOnPageScrollEventData>;
 export interface PagerViewOnPageScrollEventData {
     position: number;
@@ -28,6 +29,13 @@ export interface PagerViewProps {
      * The default value is true.
      */
     scrollEnabled?: boolean;
+    /**
+     * Higher the `scrollSensitivity` value, more the effort to swipe. 
+     * Adjust multiplier from 2-8 until you find the sweet spot.
+     *  
+     * Only supported on Android.
+     */
+    scrollSensitivity?: ScrollSensitivity;
     /**
      * Executed when transitioning between pages (ether because of animation for
      * the requested page change or when user is swiping/dragging between pages)
diff --git a/node_modules/react-native-pager-view/src/types.ts b/node_modules/react-native-pager-view/src/types.ts
index 72cf02c..13e6be1 100644
--- a/node_modules/react-native-pager-view/src/types.ts
+++ b/node_modules/react-native-pager-view/src/types.ts
@@ -5,6 +5,7 @@ export type TransitionStyle = 'scroll' | 'curl';
 export type Orientation = 'horizontal' | 'vertical';
 export type OverScrollMode = 'auto' | 'always' | 'never';
 export type PageScrollState = 'idle' | 'dragging' | 'settling';
+export type ScrollSensitivity = 2|3|4|5|6|7|8;
 
 export type PagerViewOnPageScrollEvent = ReactNative.NativeSyntheticEvent<PagerViewOnPageScrollEventData>;
 export interface PagerViewOnPageScrollEventData {
@@ -35,6 +36,14 @@ export interface PagerViewProps {
    */
   scrollEnabled?: boolean;
 
+  /**
+   * Higher the `scrollSensitivity` value, more the effort to swipe. 
+   * Adjust multiplier from 2-8 until you find the sweet spot.
+   *  
+   * Only supported on Android.
+   */
+  scrollSensitivity?: ScrollSensitivity;
+
   /**
    * Executed when transitioning between pages (ether because of animation for
    * the requested page change or when user is swiping/dragging between pages)
